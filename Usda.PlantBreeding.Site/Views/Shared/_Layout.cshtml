<!DOCTYPE html>
@Styles.Render("~/Content/bootstrap/css")

@Styles.Render("~/Content/css")
@Styles.Render("~/Content/themes/base/css")
@Styles.Render("~/Content/offlinecss")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/noty")
@Scripts.Render("~/bundles/search")
@Scripts.Render("~/bundles/offlinejs")
@Styles.Render("~/Content/font-awesome")
@*@Scripts.Render("~/bundles/react")*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.6.1/react.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.6.1/react-dom.js"></script>

@RenderSection("styles", required: false)
@RenderSection("scripts", required: false)

<script>
    Offline.options = {
        requests: true,
        checkOnLoad: true,
        deDupBody: false,
        reconnect: {
            // How many seconds should we wait before rechecking.
            initialDelay: 30
        },
        interceptRequests: true
    }

    $(document).ready(function () {
        //setup ajax error handling

        $(window).bind('beforeunload', function () {
            if (Offline.state === "down") {

                return 'The website could not connect to internet, if you leave this page you may lose work. Continue?';
            }
            else {
                document.getElementById('pagebody').style.visibility = "hidden";

                document.getElementById('load').style.visibility = "visible";

                document.getElementById('interactive');

            }

        });

    }); 

</script>

<script>
    document.onreadystatechange = function () {
        document.getElementById('pagebody').style.visibility = "hidden";

        var state = document.readyState
        if (state == 'complete') {
            document.getElementById('interactive');
            document.getElementById('load').style.visibility = "hidden";
            document.getElementById('pagebody').style.visibility = "visible";

        }


        window.mobilecheck = function () {
            var check = false;
            (function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);
            return check;
        };
    }

</script>


<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @{
        var title = (ViewBag.Title == null) ? ViewBag.IndexTitle : ViewBag.Title;
        bool showSandboxInfo = false;
    }
    <title>@title - Plant Breeding</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="apple-touch-icon" sizes="57x57" href="/favicons/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/favicons/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/favicons/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/favicons/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/favicons/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/favicons/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/favicons/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/favicons/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon-180x180.png">
    <link rel="icon" type="image/png" href="/favicons/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="/favicons/favicon-194x194.png" sizes="194x194">
    <link rel="icon" type="image/png" href="/favicons/favicon-96x96.png" sizes="96x96">
    <link rel="icon" type="image/png" href="/favicons/android-chrome-192x192.png" sizes="192x192">
    <link rel="icon" type="image/png" href="/favicons/favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="/favicons/manifest.json">
    <link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="apple-mobile-web-app-title" content="Plant Breeding">
    <meta name="application-name" content="Plant Breeding">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="msapplication-TileImage" content="/favicons/mstile-144x144.png">
    <meta name="theme-color" content="#ffffff">
</head>

<body>
    <div class="navbar navbar-default navbar-fixed-top" role="navigation" id="navagationBar">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbarItems">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="~/Home"><img src="~/Content/Images/USDA_logo.svg.png" width="47" height="32" alt="USDA"></a>
            </div>
            <div id="navbarItems" class="collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    <li><a href="~/Home">Home</a></li>
                    <li>@Html.ActionLink("Accessions", "Index", "Default", new { Area = "Accessions" }, null)</li>
                    <li>
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Maps<span class="caret"></span></a>
                        <ul class="dropdown-menu" role="menu">
                            <li>@Html.ActionLink("Active", "Index", new { area = "Maps", controller = "Default" })</li>
                            <li>@Html.ActionLink("Retired", "Retired", new { area = "Maps", controller = "Default" })</li>
                        </ul>
                    </li>

                    <li>@Html.ActionLink("Selection Summary", "Index", "SelectionSummary", new { Area = "Accessions" }, null)</li>
                    <li>@Html.ActionLink("Reports", "Index", new { area = "Reporting", controller = "Default" })</li>
                    <li>@Html.ActionLink("Cross Planning", "Index", "CrossPlanning", new { Area = "Accessions" }, null)</li>
                    <li>@Html.ActionLink("Distributions", "Index", "Distributions", new { Area = "Accessions" }, null)</li>


                    <li class="Admin">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Admin<span class="caret"></span></a>
                        <ul class="dropdown-menu" role="menu">

                            <li class="dropdown-header">General lookups</li>
                            <li><a href="~/Admin/Locations?mapFlag=false">Distribution Locations</a></li>
                            <li><a href="~/Admin/Fates">Fates</a></li>
                            <li><a href="~/Admin/FlatTypes">Flat Traits</a></li>
                            <li><a href="~/Admin/Genera">Genera</a></li>
                            <li><a href="~/Admin/Growers">Contacts</a></li>
                            <li><a href="~/Admin/Locations?mapFlag=true">Map Locations</a></li>
                            <li><a href="~/Admin/Materials">Materials</a></li>
                            <li><a href="~/Admin/Origins">Origin</a></li>
                            <li><a href="~/Admin/Ploidies">Ploidy</a></li>


                            <li role="separator" class="divider"></li>
                            <li class="dropdown-header">Genus Lookups</li>
                            <li><a href="~/Admin/CrossTypes">CrossType</a></li>
                            <li><a href="~/Admin/Traits">Traits</a></li>

                          
                            <li role="separator" class="divider"></li>
                            <li class="dropdown-header">Glossaries</li>
                            <li><a href="~/Admin/Purposes">Purposes</a></li>
                        </ul>
                    </li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a href="~/Home">
                            <text>Genus: @SessionManager.Genus</text>
                        </a>
                    </li>




                </ul>
            </div>
        </div>
    </div>
    @if (AppSettingsManager.IsSandbox)
    {
        <div class="sandboxComponent">
            <p>Sandbox: @AppSettingsManager.SandboxName</p>
        </div>
    }

    <div class="row"></div>

    <div class="container body-content">
        @if (ViewContext.RouteData.Values["controller"].ToString() != "Home")
        {

            <ol class="breadcrumb pull-left breadcrumb-sm">
                <li><a href="~/Home">Home</a></li>
                @if (ViewContext.RouteData.DataTokens["area"] != "Admin")
                {
                    <li><a href="~/Home">@SessionManager.Genus</a></li>
                }
                @if (ViewContext.RouteData.DataTokens["area"] != null)
                {
                    <li>@Html.ActionLink(@ViewContext.RouteData.DataTokens["area"].ToString(), "", "", new { Area = @ViewContext.RouteData.DataTokens["area"].ToString() }, null)</li>
                }

                @if (ViewContext.RouteData.Values["controller"].ToString() != "Default")
                {
                    <li>@Html.ActionLink(ViewContext.RouteData.Values["controller"].ToString(), "Index", ViewContext.RouteData.Values["controller"].ToString())</li>
                }

                @if (@ViewBag.ActionName != null)
                {
                    <li>@ViewBag.ActionName</li>
                }

                else if (ViewContext.RouteData.Values["action"].ToString() != "Index" && ViewContext.RouteData.Values["action"].ToString() != ViewContext.RouteData.Values["controller"].ToString())
                {
                    <li>@Html.ActionLink(ViewContext.RouteData.Values["action"].ToString(), ViewContext.RouteData.Values["action"].ToString(), ViewContext.RouteData.Values["controller"].ToString())</li>
                }

                else if (@ViewBag.Title != null)
                {
                    <li>@ViewBag.Title</li>
                }


                @if (@ViewBag.IndexTitle != null && @ViewBag.IndexTitle != String.Empty)
                {
                    <li>@ViewBag.IndexTitle</li>
                }

                else if ((Model != null && !Model.GetType().IsGenericType && Model.ToString() != null))
                {
                    <li>@Model.ToString()</li>
                }

            </ol>
        }

        <div id="load" class="spinner"></div>
        <div id="pagebody">
            @RenderBody()
        </div>
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year Horticultural Crops Research - Small Fruits Breeding Program</p>
        </footer>
    </div>
</body>
</html>